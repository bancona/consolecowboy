// Generated by CoffeeScript 1.9.3
(function() {
  var Graphics, ParticleTree, config, i, len, mainLoop, particle, particleTree, ref, snapshotElement, snapshotReady;

  Graphics = require('./graphics');

  config = require('./config');

  ParticleTree = require('./quadtree').ParticleTree;

  particleTree = new ParticleTree(config.WIDTH, {
    x: 0,
    y: 0,
    width: config.WIDTH,
    height: config.WIDTH
  });

  Graphics.gameContainer.mouseup = Graphics.gameContainer.touchend = function(args) {
    var localPt;
    localPt = Graphics.gameContainer.toLocal(args.data.global);
    particleTree.addParticle(localPt.x, localPt.y);
  };

  Graphics.gameContainer.mousemove = function(args) {
    var localPt;
    localPt = Graphics.gameContainer.toLocal(args.data.global);
    $('#mouselocation').html((localPt.x != null) && localPt.x >= 0 && (localPt.y != null) && localPt.y >= 0 ? "(" + (Math.floor(localPt.x / 1)) + ", " + (Math.floor(localPt.y / 1)) + ")" : '');
  };

  snapshotReady = false;

  snapshotElement = $('#snapshot');

  snapshotElement.html('Loading Snapshot...');

  ref = document.particles;
  for (i = 0, len = ref.length; i < len; i++) {
    particle = ref[i];
    particleTree.addParticle(particle.x, particle.y, particle.mass, particle.vx, particle.vy, particle.id);
  }

  snapshotReady = true;

  snapshotElement.html('Take Snapshot');

  window.takeSnapshot = function() {
    var particles;
    if (!snapshotReady) {
      return;
    }
    particles = particleTree.getParticles();
    snapshotElement.html('Taking Snapshot...');
    $.ajax('/takesnapshot', {
      type: 'POST',
      data: particles,
      success: function(data) {
        snapshotElement.html(data.message);
        setTimeout(function() {
          snapshotElement.html('Take Snapshot');
        }, 3000);
      },
      error: function() {
        snapshotElement.html('Snapshot Failed. Please try again');
        setTimeout(function() {
          snapshotElement.html('Take Snapshot');
        }, 3000);
      }
    });
  };

  (mainLoop = function() {
    particleTree.update(1);
    Graphics.render(particleTree);
    requestAnimationFrame(mainLoop);
  })();

}).call(this);
